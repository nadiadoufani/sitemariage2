{% extends 'base.html.twig' %}

{% block title %}{% endblock %}

{% block stylesheets %}
    
{% endblock %}
{% block body %}
<div class="container mt-5">


  <div class="row">
    <div class="col-lg-6 col-md-10 col-sm-12">
<section style="margin-top:80px;">
    <div id="calendrier" style=" 
            
            
            float:left;
            padding-left:10px;
        

            ">

    </div>
 
</section>
{% endblock %}

{% block javascripts %}
  <div style=" 
 text-align:left;">
 <a href="{{path('calendar_index')}}"><button style="border-radius: 4px;
    
    color: aqua;
    background: #666;
    padding: 20px;
    
    cursor: pointer;
    box-shadow: 4px 4px 4px 3px #823579;
    margin: 0 auto;
    " >Demande Reservation</button></a>
  <a href="{{path('centre_de_beaute')}}"><button style="border-radius: 4px;
    
    color: aqua;
    background: #666;
    padding: 20px;
   
    cursor: pointer;
    box-shadow: 4px 4px 4px 3px #823579;
    margin: 0 auto;
    ">Back</button></a>

</div> 
</div>
 <div class="col-lg-6 col-md-10 col-sm-12" style="margin-top:50px;">
<img src="{{asset('imgsalles/bride-and-groom-2145374_960_720.png')}}">
</div>
</div></div>
<script>
    window.onload = () => {
        let calendarElt = document.querySelector("#calendrier")
        let calendar = new FullCalendar.Calendar(calendarElt, {
            initialView: 'timeGridWeek',
            locale: 'fr',
            timeZone: 'Europe/Paris',
            headerToolbar: {
                start: 'prev,next today',
                center: 'title',
                end: 'dayGridMonth,timeGridWeek'
            },
            events: {{ data|raw }},
            editable: true,
            eventResizableFromStart: true
        })
        calendar.on('eventChange', (e) => {
            let url = `/api/${e.event.id}/edit`
            let donnees = {
                "title": e.event.title,
                "description": e.event.extendedProps.description,
                "start": e.event.start,
                "end": e.event.end,
                "backgroundColor": e.event.backgroundColor,
                "borderColor": e.event.borderColor,
                "textColor": e.event.textColor,
                "allDay": e.event.allDay
            }
            
            let xhr = new XMLHttpRequest
            xhr.open("PUT", url)
            xhr.send(JSON.stringify(donnees))
        })
        calendar.render()
    }
</script>

{% endblock %}